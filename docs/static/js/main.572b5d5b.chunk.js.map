{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","views/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKlB,SACI,uBACCO,KAAK,OACLC,MAAOT,EACPU,SAjBiB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,uBCNlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,kDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAQF,EAAIE,MACZV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAW,IAAVL,EAAS,EAATA,IAEzB,OACI,sBAAKM,UAAU,yCAAf,UACI,qBAAKC,IAAKP,EAAIR,IAAKgB,IAAKR,EAAIE,QAC5B,mBAAGI,UAAU,aAAb,SAA2BN,EAAIE,YCH9BO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAIrB,ECLwB,SAACA,GACzB,MAAyBd,mBAAS,CAC9BqB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAaC,EAAb,KAyBA,OApBAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAOlB,CAACpB,IAOIqB,EDrBwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QASpB,OACI,qCACI,6BAAKpB,IACJoB,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACT,cAAC,EAAD,CAEDA,IAAOA,GADFA,EAAIC,aErBpBgB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,gBAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAUA,OAAQ,qCACR,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACI,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OAClB,cAAC,EAAD,CAEDA,SAAYA,GADPA,YCnBzB6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.572b5d5b.chunk.js","sourcesContent":["import React, {  useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport const AddCategory = ({ setCategories })=>{\r\n  \r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        // console.log('Se hizo submit');\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n       \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n             type='text'\r\n             value={inputValue}\r\n             onChange={handleInputChange}\r\n             />\r\n        </form>\r\n    )\r\n};\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n    const url = ` https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=FUAN4Y64L80h5RF4uT8KszSPEDkbrAN0`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id: img.id,\r\n            title : img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n     //setImages(gifs)\r\n    // console.log(data)\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({img}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={img.url} alt={img.title}/>\r\n            <p className=\"card-title\">{img.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useState, useEffect } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n   \r\n    const {data:images, loading} = useFetchGifs(category);\r\n    // console.log(data);\r\n    // console.log(loading);\r\n    // useEffect(()=>{\r\n    //     getGifs(category)\r\n    //     .then(imgs=> setImages(imgs))\r\n    // },[category]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Loading</p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img=>\r\n                        (<GifGridItem\r\n                        key={img.id} \r\n                        img = {img}/>)\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category)=>{\r\n    const [state,setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then(imgs => {\r\n          \r\n            setState({\r\n                data:imgs,\r\n                loading:false\r\n            });\r\n         \r\n        })\r\n        \r\n\r\n\r\n    },[category]);\r\n    // setTimeout(() => {\r\n    //     setState({\r\n    //         data:[1,2,3,4,5],\r\n    //         loading: false\r\n    //     })\r\n    // }, 3000);\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from '../components/AddCategory'\r\nimport { GifGrid } from '../components/GifGrid';\r\n\r\nexport const GifExpertApp = ()=>{\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    // const handleAdd = ()=>{\r\n    //     const valor = document.querySelector('#txtPrueba').value;\r\n    //     setCategories([...categories,valor]);\r\n    // }\r\n    // function Agregar ()\r\n    // {\r\n    //     document.querySelector('#txtPrueba').value = \"hola\";\r\n    // }\r\n    return (<>\r\n    <h2>GifExpertApp</h2>\r\n    <AddCategory setCategories={setCategories}></AddCategory>\r\n    <hr/>\r\n        <ol>\r\n            {\r\n                categories.map(category => \r\n                    (<GifGrid \r\n                    key={category}\r\n                    category = {category}>\r\n                    </GifGrid>)\r\n                    )\r\n            }\r\n        </ol>\r\n    </>\r\n    );\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './views/GifExpertApp'\n\nReactDOM.render(\n  // <React.StrictMode>\n    <GifExpertApp />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}